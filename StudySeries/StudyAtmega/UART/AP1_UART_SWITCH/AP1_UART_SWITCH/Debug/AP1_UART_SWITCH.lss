
AP1_UART_SWITCH.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  000001d8  0000026c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800114  00800114  00000280  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000280  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000092d  00000000  00000000  00000340  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000082e  00000000  00000000  00000c6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000034f  00000000  00000000  0000149b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d4  00000000  00000000  000017ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000040c  00000000  00000000  000018c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000181  00000000  00000000  00001ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00001e4d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	8f c0       	rjmp	.+286    	; 0x134 <__vector_5>
  16:	00 00       	nop
  18:	a1 c0       	rjmp	.+322    	; 0x15c <__vector_6>
  1a:	00 00       	nop
  1c:	b3 c0       	rjmp	.+358    	; 0x184 <__vector_7>
  1e:	00 00       	nop
  20:	c5 c0       	rjmp	.+394    	; 0x1ac <__vector_8>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ed       	ldi	r30, 0xD8	; 216
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 31       	cpi	r26, 0x14	; 20
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e1       	ldi	r26, 0x14	; 20
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 31       	cpi	r26, 0x16	; 22
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	19 d0       	rcall	.+50     	; 0xf6 <main>
  c4:	87 c0       	rjmp	.+270    	; 0x1d4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <putch>:

volatile unsigned char Tx_flag = 0;
volatile char TX_data = 0;

void putch(unsigned char data){
	while((UCSR0A & 0x20) == 0);
  c8:	5d 9b       	sbis	0x0b, 5	; 11
  ca:	fe cf       	rjmp	.-4      	; 0xc8 <putch>
	UDR0 = data;
  cc:	8c b9       	out	0x0c, r24	; 12
	UCSR0A |= 0x20;
  ce:	5d 9a       	sbi	0x0b, 5	; 11
  d0:	08 95       	ret

000000d2 <putch_Str>:
}

void putch_Str(char *str){
  d2:	0f 93       	push	r16
  d4:	1f 93       	push	r17
  d6:	cf 93       	push	r28
  d8:	8c 01       	movw	r16, r24
	unsigned char i = 0;
  da:	c0 e0       	ldi	r28, 0x00	; 0
	while(str[i]!= '0')
  dc:	f8 01       	movw	r30, r16
  de:	ec 0f       	add	r30, r28
  e0:	f1 1d       	adc	r31, r1
  e2:	80 81       	ld	r24, Z
  e4:	80 33       	cpi	r24, 0x30	; 48
  e6:	19 f0       	breq	.+6      	; 0xee <putch_Str+0x1c>
	putch(str[i++]);
  e8:	cf 5f       	subi	r28, 0xFF	; 255
  ea:	ee df       	rcall	.-36     	; 0xc8 <putch>
  ec:	f7 cf       	rjmp	.-18     	; 0xdc <putch_Str+0xa>
}
  ee:	cf 91       	pop	r28
  f0:	1f 91       	pop	r17
  f2:	0f 91       	pop	r16
  f4:	08 95       	ret

000000f6 <main>:

int main(void)
{
	DDRE = 0x02;
  f6:	82 e0       	ldi	r24, 0x02	; 2
  f8:	82 b9       	out	0x02, r24	; 2
	UCSR0A = 0x00;
  fa:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = 0x18;
  fc:	88 e1       	ldi	r24, 0x18	; 24
  fe:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = 0x06;
 100:	86 e0       	ldi	r24, 0x06	; 6
 102:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	UBRR0H = 0x00;
 106:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 0x03;
 10a:	83 e0       	ldi	r24, 0x03	; 3
 10c:	89 b9       	out	0x09, r24	; 9
	
	EICRB = 0xff;
 10e:	8f ef       	ldi	r24, 0xFF	; 255
 110:	8a bf       	out	0x3a, r24	; 58
	EIMSK = 0xf0;
 112:	80 ef       	ldi	r24, 0xF0	; 240
 114:	89 bf       	out	0x39, r24	; 57
	EIFR = 0xf0;
 116:	88 bf       	out	0x38, r24	; 56
	sei();
 118:	78 94       	sei
	 
    while (1) 
    {
		if(Tx_flag == 1){
 11a:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <Tx_flag>
 11e:	81 30       	cpi	r24, 0x01	; 1
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0x24>
			putch_Str("\n\r Input Switch : ");
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	91 e0       	ldi	r25, 0x01	; 1
 126:	d5 df       	rcall	.-86     	; 0xd2 <putch_Str>
			putch(TX_data);
 128:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 12c:	cd df       	rcall	.-102    	; 0xc8 <putch>
			Tx_flag = 0;
 12e:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <Tx_flag>
 132:	f3 cf       	rjmp	.-26     	; 0x11a <main+0x24>

00000134 <__vector_5>:
		}
    }
}

SIGNAL(INT4_vect){
 134:	1f 92       	push	r1
 136:	0f 92       	push	r0
 138:	0f b6       	in	r0, 0x3f	; 63
 13a:	0f 92       	push	r0
 13c:	11 24       	eor	r1, r1
 13e:	8f 93       	push	r24
	cli();
 140:	f8 94       	cli
	TX_data = '0';
 142:	80 e3       	ldi	r24, 0x30	; 48
 144:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
	Tx_flag = 1;
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <Tx_flag>
	sei();
 14e:	78 94       	sei
}
 150:	8f 91       	pop	r24
 152:	0f 90       	pop	r0
 154:	0f be       	out	0x3f, r0	; 63
 156:	0f 90       	pop	r0
 158:	1f 90       	pop	r1
 15a:	18 95       	reti

0000015c <__vector_6>:

SIGNAL(INT5_vect){
 15c:	1f 92       	push	r1
 15e:	0f 92       	push	r0
 160:	0f b6       	in	r0, 0x3f	; 63
 162:	0f 92       	push	r0
 164:	11 24       	eor	r1, r1
 166:	8f 93       	push	r24
	cli();
 168:	f8 94       	cli
	TX_data = '1';
 16a:	81 e3       	ldi	r24, 0x31	; 49
 16c:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
	Tx_flag = 1;
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <Tx_flag>
	sei();
 176:	78 94       	sei
}
 178:	8f 91       	pop	r24
 17a:	0f 90       	pop	r0
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	0f 90       	pop	r0
 180:	1f 90       	pop	r1
 182:	18 95       	reti

00000184 <__vector_7>:

SIGNAL(INT6_vect){
 184:	1f 92       	push	r1
 186:	0f 92       	push	r0
 188:	0f b6       	in	r0, 0x3f	; 63
 18a:	0f 92       	push	r0
 18c:	11 24       	eor	r1, r1
 18e:	8f 93       	push	r24
	cli();
 190:	f8 94       	cli
	TX_data = '2';
 192:	82 e3       	ldi	r24, 0x32	; 50
 194:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
	Tx_flag = 1;
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <Tx_flag>
	sei();
 19e:	78 94       	sei
}
 1a0:	8f 91       	pop	r24
 1a2:	0f 90       	pop	r0
 1a4:	0f be       	out	0x3f, r0	; 63
 1a6:	0f 90       	pop	r0
 1a8:	1f 90       	pop	r1
 1aa:	18 95       	reti

000001ac <__vector_8>:

SIGNAL(INT7_vect){
 1ac:	1f 92       	push	r1
 1ae:	0f 92       	push	r0
 1b0:	0f b6       	in	r0, 0x3f	; 63
 1b2:	0f 92       	push	r0
 1b4:	11 24       	eor	r1, r1
 1b6:	8f 93       	push	r24
	cli();
 1b8:	f8 94       	cli
	TX_data = '3';
 1ba:	83 e3       	ldi	r24, 0x33	; 51
 1bc:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
	Tx_flag = 1;
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <Tx_flag>
	sei();
 1c6:	78 94       	sei
}
 1c8:	8f 91       	pop	r24
 1ca:	0f 90       	pop	r0
 1cc:	0f be       	out	0x3f, r0	; 63
 1ce:	0f 90       	pop	r0
 1d0:	1f 90       	pop	r1
 1d2:	18 95       	reti

000001d4 <_exit>:
 1d4:	f8 94       	cli

000001d6 <__stop_program>:
 1d6:	ff cf       	rjmp	.-2      	; 0x1d6 <__stop_program>

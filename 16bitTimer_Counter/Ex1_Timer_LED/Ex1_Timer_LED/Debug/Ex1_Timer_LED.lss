
Ex1_Timer_LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000018c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000118  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000018c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000018c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000851  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000079c  00000000  00000000  00000a75  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000026e  00000000  00000000  00001211  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  00001480  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003f2  00000000  00000000  000014c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000003c  00000000  00000000  000018b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  000018f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	4b c0       	rjmp	.+150    	; 0xd0 <__vector_14>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a2 30       	cpi	r26, 0x02	; 2
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	02 d0       	rcall	.+4      	; 0xae <main>
  aa:	34 c0       	rjmp	.+104    	; 0x114 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <main>:
volatile unsigned char LED_Data = 0x00;
unsigned char timer1Cnt = 0;

int main()
{
	DDRC = 0xfF;
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	84 bb       	out	0x14, r24	; 20

	TCCR1A = 0x00;
  b2:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = (1<<CS10); // CS
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	8e bd       	out	0x2e, r24	; 46

	TCNT1 = 0;
  b8:	1d bc       	out	0x2d, r1	; 45
  ba:	1c bc       	out	0x2c, r1	; 44
	TIMSK = (1<<TOIE1);
  bc:	84 e0       	ldi	r24, 0x04	; 4
  be:	87 bf       	out	0x37, r24	; 55
	TIFR |=1 << TOV1;
  c0:	86 b7       	in	r24, 0x36	; 54
  c2:	84 60       	ori	r24, 0x04	; 4
  c4:	86 bf       	out	0x36, r24	; 54

	sei();
  c6:	78 94       	sei
    while (1) 
    {
		PORTC = LED_Data;
  c8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <LED_Data>
  cc:	85 bb       	out	0x15, r24	; 21
  ce:	fc cf       	rjmp	.-8      	; 0xc8 <main+0x1a>

000000d0 <__vector_14>:
    }
	return 0;
}

SIGNAL(TIMER1_OVF_vect){
  d0:	1f 92       	push	r1
  d2:	0f 92       	push	r0
  d4:	0f b6       	in	r0, 0x3f	; 63
  d6:	0f 92       	push	r0
  d8:	11 24       	eor	r1, r1
  da:	8f 93       	push	r24
	cli();
  dc:	f8 94       	cli

	timer1Cnt++;
  de:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  e2:	8f 5f       	subi	r24, 0xFF	; 255
  e4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>

	if(timer1Cnt == 112){// 1/65536/7378200
  e8:	80 37       	cpi	r24, 0x70	; 112
  ea:	69 f4       	brne	.+26     	; 0x106 <__vector_14+0x36>
		LED_Data++;
  ec:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <LED_Data>
  f0:	8f 5f       	subi	r24, 0xFF	; 255
  f2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <LED_Data>

		if(LED_Data >= 0xff)
  f6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <LED_Data>
  fa:	8f 3f       	cpi	r24, 0xFF	; 255
  fc:	11 f4       	brne	.+4      	; 0x102 <__vector_14+0x32>
			LED_Data = 0;
  fe:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <LED_Data>

		timer1Cnt=0;
 102:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
	sei();
 106:	78 94       	sei
}
 108:	8f 91       	pop	r24
 10a:	0f 90       	pop	r0
 10c:	0f be       	out	0x3f, r0	; 63
 10e:	0f 90       	pop	r0
 110:	1f 90       	pop	r1
 112:	18 95       	reti

00000114 <_exit>:
 114:	f8 94       	cli

00000116 <__stop_program>:
 116:	ff cf       	rjmp	.-2      	; 0x116 <__stop_program>
